package generator

import model.*
import dsl.Layout
import java.io.File

fun generateTypeScriptEventStubs(
    fileName: String,
    layouts: List<Layout>,
    outputDir: String
) {
    fun collectEvents(layout: Layout): List<EventMeta> {
        val events = mutableListOf<EventMeta>()
        layout.parts.forEach { part ->
            when (part) {
                is InputText -> part.meta.events?.let { events.addAll(it) }
                is Button -> part.meta.events?.let { events.addAll(it) }
                is SubLayout -> events.addAll(collectEvents(part.layout))
            }
        }
        return events
    }

    val allEvents = layouts.flatMap { collectEvents(it) }
        .distinctBy { it.handler }

    val ts = buildString {
        appendLine("/**")
        appendLine(" * UI event handler stubs")
        appendLine(" * Generated by Kotlin DSL Generator")
        appendLine(" */")
        allEvents.forEach { event ->
            appendLine()
            appendLine("/**")
            appendLine(" * trigger: @${event.trigger}")
            if (!event.description.isNullOrBlank()) {
                appendLine(" * ${event.description}")
            }
            appendLine(" */")
            appendLine("export function ${event.handler}(): void {")
            appendLine("  // TODO: implement handler")
            appendLine("}")
        }
    }
    File(outputDir, fileName).writeText(ts)
    println("Generated: $fileName in $outputDir")
}
